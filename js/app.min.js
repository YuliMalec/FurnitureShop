/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"useDynamicAdapt\": () => (/* binding */ useDynamicAdapt)\n/* harmony export */ });\n//@include ('spoilers.js');\r\n//@include ('swiper.js');\r\n\r\n\r\n//Проверка на каком устройстве открыт сайт\r\nconst isMobile = {\r\n  Android: function () {\r\n    return navigator.userAgent.match(/Android/i);\r\n  },\r\n  BlackBerry: function () {\r\n    return navigator.userAgent.match(/BlackBarry/i);\r\n  },\r\n  IOS: function () {\r\n    return navigator.userAgent.match(/iPhone|iPad|iPod/i);\r\n  },\r\n  Opera: function () {\r\n    return navigator.userAgent.match(/Opera Mini/i);\r\n  },\r\n  Windows: function () {\r\n    return navigator.userAgent.match(/IEMobile/i);\r\n  },\r\n  any: function () {\r\n    return (\r\n      isMobile.Android() ||\r\n      isMobile.BlackBerry() ||\r\n      isMobile.IOS() ||\r\n      isMobile.Opera() ||\r\n      isMobile.Windows()\r\n    );\r\n  },\r\n};\r\n//добавляем классы чтоб отделить тачскрины от компов\r\nif (isMobile.any()) {\r\n  document.body.classList.add(\"_touch\");\r\n} else {\r\n  document.body.classList.add(\"_pc\");\r\n}\r\nconst iconMenu = document.querySelector(\".icon_menu\");\r\n\r\nif (iconMenu) {\r\n  const menuBody = document.querySelector(\".menu_body\");\r\n  iconMenu.addEventListener(\"click\", function () {\r\n    document.body.classList.toggle(\"lock\");\r\n    iconMenu.classList.toggle(\"_active\");\r\n    menuBody.classList.toggle(\"_active\");\r\n  });\r\n}\r\n\r\n//=============================================\r\n\r\nwindow.onload = function () {\r\n  document.addEventListener(\"click\", documentActions);\r\n\r\n  function documentActions(event) {\r\n    const targetElement = event.target;\r\n    if (window.innerWidth > 768 && isMobile.any()) {\r\n      if (targetElement.classList.contains(\"menu-arow\")) {\r\n        targetElement.closest(\".menu_item\").classList.toggle(\"_hover\");\r\n      }\r\n      if (\r\n        !targetElement.closest(\".menu_item\") &&\r\n        document.querySelectorAll(\".menu_item._hover\").length > 0\r\n      ) {\r\n        //дописать эту функцию\r\n        document.querySelector(\".menu__item._hover\").classList.remove(\"_hover\");\r\n      }\r\n    }\r\n    if (targetElement.classList.contains(\"search_form_icon\")) {\r\n      document.querySelector(\".search_form\").classList.toggle(\"_active\");\r\n    } else if (\r\n      !targetElement.closest(\".search-form\") &&\r\n      document.querySelector(\".search-form._active\")\r\n    ) {\r\n      document.querySelector(\".search-form\").classList.remove(\"_active\");\r\n    }\r\n    if (targetElement.classList.contains(\"products_more\")) {\r\n      getProducts(targetElement);\r\n      event.preventDefault();\r\n    }\r\n    if (targetElement.classList.contains(\"actions-product_button\")) {\r\n      const productId = targetElement.closest(\".item-product\").dataset.pid;\r\n       \r\n      addToCart(targetElement, productId);\r\n\r\n      event.preventDefault();\r\n    }\r\n\r\n    if(targetElement.classList.contains('cart_header_icon') || targetElement.closest('.cart_header_icon')){\r\n      if(document.querySelector('.cart-list').children.length >0){\r\n        document.querySelector('.cart_header').classList.toggle('_active');\r\n      }\r\n      event.preventDefault();\r\n      \r\n    }else if(!targetElement.closest('.cart_header') && !targetElement.classList.contains('actions-product_button')){\r\n      document.querySelector('.cart_header').classList.remove('_active');\r\n      \r\n    } \r\n    if(targetElement.classList.contains('cart-list_delete')){\r\n      const productId = targetElement.closest('.cart-list_item').dataset.cartPid;\r\n      updateCart(targetElement,productId,false);\r\n      event.preventDefault();\r\n    }\r\n \r\n    //Load more products////////\r\n    async function getProducts(button) {\r\n      if (!button.classList.contains( \"_hold\")) {\r\n        button.classList.add(\"_hold\");\r\n        const file = \"json/products.json\";\r\n        let response = await fetch(file, {\r\n          method: \"GET\",\r\n        });\r\n        if (response.ok) {\r\n          let result = await response.json();\r\n          loadProducts(result);\r\n          button.classList.remove(\"_hold\");\r\n          button.remove();\r\n        } else {\r\n          alert(\"Ошибка\");\r\n        }\r\n      }\r\n    }\r\n    function loadProducts(data) {\r\n      const productsItems = document.querySelector(\".products_items\");\r\n      data.products.forEach((item) => {\r\n        const productId = item.id;\r\n        const productUrl = item.url;\r\n        const productImage = item.image;\r\n        const productTitle = item.title;\r\n        const productText = item.text;\r\n        const productPrice = item.price;\r\n        const productOldPrice = item.priceOld;\r\n        const productShareUrl = item.shareUrl;\r\n        const productLikeUrl = item.likeUrl;\r\n        const productLabels = item.labels;\r\n\r\n        let productTemplarteStart = `<article data-pid = \"${productId}\"class=\"products_item item-product\">`;\r\n        let productTemplarteEnd = ` </article>`;\r\n        let productTemplateLabels = ``;\r\n        if (productLabels) {\r\n          let productTemplateLabelsStart = `<div class=\"item-product_labels\">`;\r\n          let productTemplateLabelsEnd = `</div>`;\r\n          let productTemplateLabelsContent = ``;\r\n          productLabels.forEach((labelItem) => {\r\n            productTemplateLabelsContent += ` <div class=\"item-product_label item-product_label_${labelItem.type}\">${labelItem.value}</div>`;\r\n          });\r\n          productTemplateLabels += productTemplateLabelsStart;\r\n          productTemplateLabels += productTemplateLabelsContent;\r\n          productTemplateLabels += productTemplateLabelsEnd;\r\n        }\r\n        let productTemplateImage = `<a href=\"${productUrl}\" class=\"item-product_image _ibg\">              \r\n                 <img src=\"img/img/products/${productImage}\" alt=\"${productTitle}\">\r\n                </a>`;\r\n        let productTemplateBodyStart = `<div class=\"item-product_body\">`;\r\n        let productTemplateBodyEnd = ` </div>`;\r\n        let productTemplateContent = `<div class=\"item-product_content\">\r\n                    <h5 class=\"item-product_title\">${productTitle}</h5>\r\n                    <div class=\"item-product_text\">${productText}</div>`;\r\n        let productTemplatePrices = ``;\r\n        let productTemplatePricesStart = `<div class=\"item-product_prices\">`;\r\n        let productTemplatePricesCurrent = `<div class=\"item-product_price\">Rp ${productPrice}</div>`;\r\n        let productTemplatePricesOld = `<div class=\"item-product_price item-product_price_old\">Rp ${productOldPrice}</div>`;\r\n\r\n        let productTemplatePricesEnd = `</div>`;\r\n        productTemplatePrices = productTemplatePricesStart;\r\n        productTemplatePrices += productTemplatePricesCurrent;\r\n        if (productOldPrice) {\r\n          productTemplatePrices += productTemplatePricesOld;\r\n        }\r\n        productTemplatePrices += productTemplatePricesEnd;\r\n\r\n        let productTemplateActions = `<div class=\"item-product_actions actions-product\">\r\n                      <div class=\"actions-product_body\">\r\n                        <a href=\"\" class=\"actions-product_button _btn _btn_white\">Add to cart</a>\r\n                        <a href=\"${productShareUrl}\" class=\"actions-product_link icon-share\">Share</a>\r\n                        <a href=\"${productLikeUrl}\" class=\"actions-product_link icon-favorite\">Like</a>\r\n                      </div>\r\n                     </div></div>`;\r\n\r\n        let productTemplateBody = ``;\r\n        productTemplateBody = productTemplateBodyStart;\r\n        productTemplateBody += productTemplateContent;\r\n        productTemplateBody += productTemplatePrices;\r\n        productTemplateBody += productTemplateActions;\r\n        productTemplateBody += productTemplateBodyEnd;\r\n\r\n        let productTemplate = ``;\r\n        productTemplate = productTemplarteStart;\r\n        productTemplate += productTemplateLabels;\r\n        productTemplate += productTemplateImage;\r\n        productTemplate += productTemplateBody;\r\n        productTemplate += productTemplarteEnd;\r\n\r\n        productsItems.insertAdjacentHTML(\"beforeend\", productTemplate);\r\n      });\r\n    }\r\n    function addToCart(productButton, productId) {\r\n      if (!productButton.classList.contains(\"_hold\")) {\r\n        productButton.classList.add(\"_hold\");\r\n        productButton.classList.add(\"_fly\");\r\n\r\n        const cart = document.querySelector(\".cart_header_icon\");\r\n        const product = document.querySelector(`[data-pid=\"${productId}\"]`);\r\n        const productImage = product.querySelector(\".item-product_image\");\r\n      \r\n        const productImageFly = productImage.cloneNode(true);\r\n\r\n        const productImageFlyWidth = productImage.offsetWidth;\r\n        const productImageFlyHeight = productImage.offsetHeight;\r\n        const productImageFlyTop = productImage.getBoundingClientRect().top;\r\n        const productImageFlyLeft = productImage.getBoundingClientRect().left;\r\n\r\n        productImageFly.setAttribute(\"class\", \"_flyImage _ibg\");\r\n        productImageFly.style.cssText = `\r\n    left: ${productImageFlyLeft}px;\r\n    top:${productImageFlyTop}px;\r\n    height:${productImageFlyHeight}px;\r\n    width:${productImageFlyWidth}px;\r\n    `;\r\n         \r\n        document.body.append(productImageFly);\r\n\r\n        const cartFlyLeft = cart.getBoundingClientRect().left;\r\n        const cartFlyTop = cart.getBoundingClientRect().top;\r\n\r\n        productImageFly.style.cssText = `\r\n\r\n        left:${cartFlyLeft}px;\r\n        top:${cartFlyTop}px;\r\n        width:0;\r\n        height:0;\r\n        opacity:0;\r\n\r\n        `;\r\n        productImageFly.addEventListener('transitionend', function () { \r\n          \r\n          if(productButton.classList.contains('_fly')){\r\n            \r\n            productImageFly.remove();\r\n            updateCart(productButton, productId);\r\n            productButton.classList.remove('_fly');\r\n            \r\n          }\r\n        });\r\n\r\n      }\r\n    }\r\n\r\n    function updateCart (productButton, productId, productAdd = true) {\r\n      const cart = document.querySelector('.cart_header');\r\n      const cartIcon = cart.querySelector('.cart_header_icon');\r\n      const cartQuantity = cartIcon.querySelector('span');\r\n      const cartProduct = document.querySelector( `[data-cart-pid = \"${productId}\" ] `);\r\n      const cartList = document.querySelector('.cart-list');\r\n     \r\n      /// добавление товаров в корзину\r\n      if(productAdd) {\r\n       if(cartQuantity){\r\n        cartQuantity.innerHTML = ++cartQuantity.innerHTML;\r\n       } else {\r\n        cartIcon.insertAdjacentHTML('beforeend', '<span>1</span>');\r\n        \r\n       }\r\n       if(!cartProduct){\r\n        const product = document.querySelector(`[data-pid = \"${productId}\"]`);\r\n        const cartProductImage = product.querySelector('.item-product_image').innerHTML;\r\n        const cartProductTitle = product.querySelector('.item-product_title').innerHTML;\r\n        \r\n        const cartProductContent = `\r\n        <a href=\"#\" class=\"cart-list_image _ibg\">${cartProductImage}</a>\r\n        <div class=\"cart-list_body\">\r\n        <a href=\"#\" class=\"cart-list_title _ibg\">${cartProductTitle}</a>\r\n        <div class=\"cart-list_quantity\">Quantity: <span>1</span> </div>\r\n        <a href=\"#\" class=\"cart-list_delete\">Delete</a>\r\n        </div>\r\n\r\n        `;\r\n        cartList.insertAdjacentHTML('beforeend', `<li data-cart-pid=\"${productId}\"class=\"cart-list_item\">${cartProductContent}</li>`);\r\n            \r\n       }else{\r\n        const cartProductQuatity = cartProduct.querySelector('.cart-list_quantity span');\r\n        cartProductQuatity.innerHTML = ++cartProductQuatity.innerHTML;\r\n       }\r\n       productButton.classList.remove('_hold');\r\n      } else {\r\n        const cartProductQuatity = cartProduct.querySelector('.cart-list_quantity span');\r\n        cartProductQuatity.innerHTML = --cartProductQuatity.innerHTML;\r\n        if(!parseInt(cartProductQuatity.innerHTML)){\r\n          cartProduct.remove();\r\n        }\r\n        const cartQuantityValue = --cartQuantity.innerHTML;\r\n\r\n        if(cartQuantityValue){\r\n          cartQuantity.innerHTML = cartQuantityValue;\r\n        }else{\r\n          cartQuantity.remove();\r\n          cart.classList.remove('_active');\r\n        }\r\n      }\r\n    }\r\n\r\n    ///furniture//////////////////////////////////////////////////////////\r\n    const furniture = document.querySelector('.furniture_body');\r\nif(furniture && !isMobile.any()){\r\n  const furnitureItems = document.querySelector('.furniture_items');\r\n  const furnitureColumn = document.querySelectorAll('.furniture_column');\r\n\r\n  //Скорость анимации\r\n  const speed= furniture.dataset.speed;\r\n\r\n  //Обьявление переменных\r\n  let positionX = 0;\r\n  let coordXprocent = 0;\r\n\r\n  function setMouseGalleryStyle(){\r\n    let furnitureItemsWidth = 0;\r\n    furnitureColumn.forEach(element=>{\r\n      furnitureItemsWidth += element.offsetWidth;\r\n    });\r\n     const furnitureDifferent = furnitureItemsWidth - furniture.offsetWidth;\r\n     const distX = Math.floor(coordXprocent - positionX);\r\n\r\n     positionX = positionX + (distX * speed);\r\n     let position = furnitureDifferent /200 * positionX;\r\n\r\n     furnitureItems.style.cssText = `transform: translate3d(${-position}px, 0,0 );`;\r\n     if(Math.abs(distX) > 0){\r\n      requestAnimationFrame(setMouseGalleryStyle);\r\n     } else{\r\n      furniture.classList.remove('_init');\r\n     }\r\n  }\r\n  furniture.addEventListener(\"mousemove\", function(e){\r\n    //Получение ширины\r\n    console.log(\"Hello\")\r\n    const furnitureWidth = furniture.offsetWidth;\r\n\r\n    //Ноль по середине\r\n    const coordX = e.pageX - furnitureWidth / 2;\r\n    //Получаем проценты\r\n    coordXprocent = coordX / furnitureWidth * 200;\r\n\r\n    if(!furniture.classList.contains('_init')){\r\n      requestAnimationFrame(setMouseGalleryStyle);\r\n      furniture.classList.add('_init');\r\n    }\r\n  });\r\n}\r\n }\r\n  ///header/////////////////////////\r\n\r\n  const headerElement = document.querySelector(\".header\");\r\n\r\n  const callback = function (entries, observer) {\r\n    if (entries[0].isIntersecting) {\r\n      headerElement.classList.remove(\"_scroll\");\r\n      \r\n    } else {\r\n         headerElement.classList.add(\"_scroll\");\r\n    }\r\n  };\r\n  const headerObserver = new IntersectionObserver(callback);\r\n  headerObserver.observe(headerElement);\r\n};\r\n\r\n//==============================================================================\r\nconst spoilersArray = document.querySelectorAll(\"[data-spoilers]\");\r\n\r\nif (spoilersArray.length > 0) {\r\n  const spoilersRegular = Array.from(spoilersArray).filter(function (\r\n    item,\r\n    index,\r\n    self\r\n  ) {\r\n    return !item.dataset.spoilers.split(\",\")[0];\r\n  });\r\n\r\n  if (spoilersRegular.length > 0) {\r\n    initSpoilers(spoilersRegular);\r\n  }\r\n\r\n  const spoilersMedia = Array.from(spoilersArray).filter(function (\r\n    item,\r\n    index,\r\n    self\r\n  ) {\r\n    return item.dataset.spoilers.split(\",\")[0];\r\n  });\r\n  \r\n  if (spoilersMedia.length > 0) {\r\n    const breakpointArray = [];\r\n    spoilersMedia.forEach((item) => {\r\n      const params = item.dataset.spoilers;\r\n      const breakpoint = {};\r\n      const paramsArray = params.split(\",\");\r\n      breakpoint.value = paramsArray[0];\r\n      breakpoint.type = paramsArray[1] ? paramsArray[1].trim() : \"max\";\r\n      breakpoint.item = item;\r\n      breakpointArray.push(breakpoint);\r\n    });\r\n\r\n    let mediaQueries = breakpointArray.map(function (item) {\r\n      return (\r\n        \"(\" +\r\n        item.type +\r\n        \"-width: \" +\r\n        item.value +\r\n        \"px),\" +\r\n        item.value +\r\n        \",\" +\r\n        item.type\r\n      );\r\n    });\r\n    mediaQueries = mediaQueries.filter(function (item, index, self) {\r\n      return self.indexOf(item) === index;\r\n    });\r\n\r\n    mediaQueries.forEach((breakpoint) => {\r\n      const paramsArray = breakpoint.split(\",\");\r\n      const mediaBreakpoint = paramsArray[1];\r\n      const mediaType = paramsArray[2];\r\n      const matchMedia = window.matchMedia(paramsArray[0]);\r\n\r\n      const spoilersArray = breakpointArray.filter(function (item) {\r\n        if (item.value === mediaBreakpoint && item.type === mediaType) {\r\n          return true;\r\n        }\r\n      });\r\n      matchMedia.addListener(function () {\r\n        initSpoilers(spoilersArray, matchMedia);\r\n        \r\n      });\r\n      initSpoilers(spoilersArray, matchMedia);\r\n    });\r\n  }\r\n  function initSpoilers(spoilersArray, matchMedia = false) {\r\n    \r\n    spoilersArray.forEach((spoilersBlock) => {\r\n      spoilersBlock = matchMedia ? spoilersBlock.item : spoilersBlock;\r\n\r\n      if (matchMedia.matches || !matchMedia) {\r\n        spoilersBlock.classList.add(\"_init\");\r\n        initSpoilerBody(spoilersBlock);\r\n        spoilersBlock.addEventListener(\"click\", setSpoilerAction);\r\n      } else {\r\n        spoilersBlock.classList.remove(\"_init\");\r\n        initSpoilerBody(spoilersBlock, false);\r\n        spoilersBlock.addEventListener(\"click\", setSpoilerAction);\r\n      }\r\n      \r\n    });\r\n  }\r\n  function initSpoilerBody(spoilersBlock, hideSpoilerBody = true) {\r\n    \r\n    const spoilerTitle = spoilersBlock.querySelectorAll(\"[data-spoiler]\");\r\n    if (spoilerTitle.length > 0) {\r\n      spoilerTitle.forEach((spoilerTitle) => {\r\n        if (hideSpoilerBody) {\r\n          spoilerTitle.removeAttribute(\"tabindex\");\r\n          if (!spoilerTitle.classList.contains(\"_active\")) {\r\n            spoilerTitle.nextElementSibling.hidden = true;\r\n          }\r\n        } else {\r\n          spoilerTitle.setAttribute(\"tabindex\", \"-1\");\r\n          spoilerTitle.nextElementSibling.hidden = false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n  function setSpoilerAction(event) {\r\n    \r\n    const el = event.target;\r\n    if (el.hasAttribute(\"data-spoiler\") || el.closest(\"[data-spoiler]\")) {\r\n      const spoilerTitle = el.hasAttribute(\"data-spoiler\")\r\n        ? el\r\n        : el.closest(\"[data-spoiler]\");\r\n      const spoilersBlock = spoilerTitle.closest(\"[data-spoiler]\");\r\n      const oneSpoiler = spoilersBlock.hasAttribute(\"data-one-spoiler\")\r\n        ? true\r\n        : false;\r\n      if (!spoilersBlock.querySelectorAll(\"._slide\").length) {\r\n        if (oneSpoiler && !spoilerTitle.classList.contains(\"_active\")) {\r\n          hideSpoilersBody(spoilersBlock);\r\n        }\r\n        spoilerTitle.classList.toggle(\"_active\");\r\n        _slideToggle(spoilerTitle.nextElementSibling, 500);\r\n      }\r\n      event.preventDefault();\r\n    }\r\n  }\r\n  function hideSpoilersBody(spoilersBlock) {\r\n   \r\n    const spoilersActiveTitle = spoilersBlock.querySelector(\r\n      \"[data-spoiler]._active\"\r\n    );\r\n    if (spoilersActiveTitle) {\r\n      spoilersActiveTitle.classList.remove(\"_active\");\r\n      _slideUp(spoilersActiveTitle.nextElementSibling, 500);\r\n    }\r\n  }\r\n}\r\n//===================================================================================\r\n\r\nlet _slideUp = (target, duration = 500) => {\r\n  \r\n  if (!target.classList.contains(\"_slide\")) {\r\n    target.classList.add(\"_slide\");\r\n    target.style.transitionProperty = \"height, margin, padding\";\r\n    target.style.transitionDuration = duration + \"ms\";\r\n    target.style.heigth = target.offsetHeight + \"px\";\r\n    target.offsetHeight;\r\n    target.style.overflow = \"hidden\";\r\n    target.style.heigth = 0;\r\n    target.style.paddingTop = 0;\r\n    target.style.paddingBottom = 0;\r\n    target.style.marginTop = 0;\r\n    target.style.marginBottom = 0;\r\n    window.setTimeout(() => {\r\n      target.hidden = true;\r\n      target.style.removeProperty(\"heigth\");\r\n      target.style.removeProperty(\"padding-top\");\r\n      target.style.removeProperty(\"padding-bottom\");\r\n      target.style.removeProperty(\"margin-top\");\r\n      target.style.removeProperty(\"margin-bottom\");\r\n      target.style.removeProperty(\"overflow\");\r\n      target.style.removeProperty(\"transition-duration\");\r\n      target.style.removeProperty(\"trannsition-property\");\r\n      target.classList.remove(\"_slide\");\r\n    }, duration);\r\n  }\r\n};\r\n\r\nlet _slideDown = (target, duration = 500) => {\r\n  \r\n  if (!target.classList.contains(\"_slide\")) {\r\n    target.classList.add(\"_slide\");\r\n    if (target.hidden) {\r\n      target.hidden = false;\r\n    }\r\n    let height = target.offsetHeight;\r\n    target.style.heigth = 0;\r\n    target.style.paddingTop = 0;\r\n    target.style.paddingBottom = 0;\r\n    target.style.marginTop = 0;\r\n    target.style.marginBottom = 0;\r\n    target.offsetHeight;\r\n    target.style.transitionProperty = \"height, margin, padding\";\r\n    target.style.transitionDuration = duration + \"ms\";\r\n    target.style.heigth = target.offsetHeight + \"px\";\r\n    target.style.removeProperty(\"padding-top\");\r\n    target.style.removeProperty(\"padding-bottom\");\r\n    target.style.removeProperty(\"margin-top\");\r\n    target.style.removeProperty(\"margin-bottom\");\r\n\r\n    window.setTimeout(() => {\r\n      target.style.removeProperty(\"heigth\");\r\n\r\n      target.style.removeProperty(\"overflow\");\r\n      target.style.removeProperty(\"transition-duration\");\r\n      target.style.removeProperty(\"trannsition-property\");\r\n      target.classList.remove(\"_slide\");\r\n    }, duration);\r\n  }\r\n};\r\nlet _slideToggle = (target, duration = 500) => {\r\n  \r\n  if (target.hidden) {\r\n    return _slideDown(target, duration);\r\n  } else {\r\n    return _slideUp(target, duration);\r\n  }\r\n};\r\n//=========Слайдер swiper====================\r\nlet sliders = document.querySelectorAll(\".swiper\");\r\n\r\nif (sliders) {\r\n  for (let index = 0; index < sliders.length; index++) {\r\n    let slider = sliders[index];\r\n    if (!slider.classList.contains(\"swiper-bild\")) {\r\n      let slider_items = slider.children;\r\n      if (slider_items) {\r\n        for (let index = 0; index < slider_items.length; index++) {\r\n          let el = slider_items[index];\r\n          el.classList.add(\"swiper-slide\");\r\n        }\r\n      }\r\n      let slider_content = slider.innerHTML;\r\n      let slider_wrapper = document.createElement(\"div\");\r\n      slider_wrapper.classList.add(\"swiper-wrapper\");\r\n      slider_wrapper.innerHTML = slider_content;\r\n      slider.innerHTML = \"\";\r\n      slider.appendChild(slider_wrapper);\r\n      slider.classList.add(\"swiper-bild\");\r\n\r\n      if (slider.classList.contains(\"_swiper_scroll\")) {\r\n        let sliderScroll = document.createElement(\"div\");\r\n        sliderScroll.classList.add(\"swiper-scrollbar\");\r\n        slider.appendChild(sliderScroll);\r\n      }\r\n    }\r\n    if (slider.classList.contains(\"_gallery\")) {\r\n      // slider.data('LigthGallery').destroy(true);\r\n    }\r\n  }\r\n  sliders_bild_collback();\r\n}\r\n\r\nfunction sliders_bild_collback(params) {}\r\n\r\nconst swiper = new Swiper(\".swiper\", {\r\n  observer: true,\r\n  observeParents: true,\r\n  slidesPerView: 1,\r\n  spaceBetween: 32,\r\n  watchOverflow: true,\r\n  speed: 800,\r\n  loop: true,\r\n  loopAdditionalSlides: 5,\r\n  preloadImages: false,\r\n  parallax: true,\r\n  direction: \"horizontal\",\r\n  pagination: {\r\n    el: \".controls-slider-main_docts\",\r\n    clickable: true,\r\n    //dynamicBullets: true,\r\n    //enderBullet: function (index,className) {\r\n    // return '<span class = \"' + className + '\">' + (index + 1) + '</span>';\r\n    // }\r\n    //type: 'bullets'\r\n    //type: 'fraction'\r\n    //type: 'progressbar'\r\n  },\r\n  navigation: {\r\n    nextEl: \".slider-arrow_next\",\r\n    prevEl: \".slider-arrow_prev\",\r\n  },\r\n  /// scrollbar: {\r\n  // el: \".swiper-scrollbar\",\r\n  // draggable: true\r\n  // },\r\n  // keyboard:{\r\n  // enabled: true,\r\n  //  onlyInViewport:true,\r\n  //  pageUpDown:true\r\n  // },\r\n  //mousewheel:{\r\n  // sensitivity:1,\r\n  // eventsTarget: '.image-slider'\r\n  //},\r\n\r\n  // initialSlide: true,\r\n\r\n  //direction: 'horyzontal'\r\n  /* breakpoints:{\r\n      320:{\r\n        slidesPerView:1,\r\n      },\r\n      480:{\r\n        slidesPerView:2,\r\n      }, \r\n       992:{\r\n        slidesPerView:3,\r\n      }\r\n    }*/\r\n});\r\n\r\n// @include('js/dynamic_adapt.js',{});\r\n//Динамический адаптив/////////////////////////////////\r\n/**\r\n *@typedef {Object} dNode\r\n * @property {HTMLElement} parent\r\n * @property {HTMLElement} element\r\n * @property {HTMLElement} to\r\n * @property {string} breakpoint\r\n * @property {string} order\r\n * @property {number} index\r\n */\r\n\r\n/**\r\n * @typedef {Object} dMediaQuery\r\n * @property {string} query\r\n * @property {number} breakpoint\r\n */\r\n\r\n/**\r\n * @param {'min' | 'max'} type\r\n */\r\nfunction useDynamicAdapt(type = \"max\") {\r\n  const className = \"_dynamic_adapt_\";\r\n  const attrName = \"data-da\";\r\n\r\n  /** @type {dNode[]} */\r\n  const dNodes = getDNodes();\r\n\r\n  /** @type {dMediaQuery[]} */\r\n  const dMediaQueries = getDMediaQueries(dNodes);\r\n\r\n  dMediaQueries.forEach((dMediaQuery) => {\r\n    const matchMedia = window.matchMedia(dMediaQuery.query);\r\n    // массив объектов с подходящим брейкпоинтом\r\n    const filteredDNodes = dNodes.filter(\r\n      ({ breakpoint }) => breakpoint === dMediaQuery.breakpoint\r\n    );\r\n    const mediaHandler = getMediaHandler(matchMedia, filteredDNodes);\r\n    matchMedia.addEventListener(\"change\", mediaHandler);\r\n\r\n    mediaHandler();\r\n  });\r\n\r\n  function getDNodes() {\r\n    const result = [];\r\n    const elements = [...document.querySelectorAll(`[${attrName}]`)];\r\n\r\n    elements.forEach((element) => {\r\n      const attr = element.getAttribute(attrName);\r\n      const [toSelector, breakpoint, order] = attr\r\n        .split(\",\")\r\n        .map((val) => val.trim());\r\n\r\n      const to = document.querySelector(toSelector);\r\n\r\n      if (to) {\r\n        result.push({\r\n          parent: element.parentElement,\r\n          element,\r\n          to,\r\n          breakpoint: breakpoint ?? \"767\",\r\n          order:\r\n            order !== undefined\r\n              ? isNumber(order)\r\n                ? Number(order)\r\n                : order\r\n              : \"last\",\r\n          index: -1,\r\n        });\r\n      }\r\n    });\r\n\r\n    return sortDNodes(result);\r\n  }\r\n\r\n  /**\r\n   * @param {dNode} items\r\n   * @returns {dMediaQuery[]}\r\n   */\r\n  function getDMediaQueries(items) {\r\n    const uniqItems = [\r\n      ...new Set(\r\n        items.map(\r\n          ({ breakpoint }) => `(${type}-width: ${breakpoint}px),${breakpoint}`\r\n        )\r\n      ),\r\n    ];\r\n\r\n    return uniqItems.map((item) => {\r\n      const [query, breakpoint] = item.split(\",\");\r\n\r\n      return { query, breakpoint };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param {MediaQueryList} matchMedia\r\n   * @param {dNodes} items\r\n   */\r\n  function getMediaHandler(matchMedia, items) {\r\n    return function mediaHandler() {\r\n      if (matchMedia.matches) {\r\n        items.forEach((item) => {\r\n          moveTo(item);\r\n        });\r\n\r\n        items.reverse();\r\n      } else {\r\n        items.forEach((item) => {\r\n          if (item.element.classList.contains(className)) {\r\n            moveBack(item);\r\n          }\r\n        });\r\n\r\n        items.reverse();\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @param {dNode} dNode\r\n   */\r\n  function moveTo(dNode) {\r\n    const { to, element, order } = dNode;\r\n    dNode.index = getIndexInParent(dNode.element, dNode.element.parentElement);\r\n    element.classList.add(className);\r\n\r\n    if (order === \"last\" || order >= to.children.length) {\r\n      to.append(element);\r\n\r\n      return;\r\n    }\r\n\r\n    if (order === \"first\") {\r\n      to.prepend(element);\r\n\r\n      return;\r\n    }\r\n\r\n    to.children[order].before(element);\r\n  }\r\n\r\n  /**\r\n   * @param {dNode} dNode\r\n   */\r\n  function moveBack(dNode) {\r\n    const { parent, element, index } = dNode;\r\n    element.classList.remove(className);\r\n\r\n    if (index >= 0 && parent.children[index]) {\r\n      parent.children[index].before(element);\r\n    } else {\r\n      parent.append(element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {HTMLElement} element\r\n   * @param {HTMLElement} parent\r\n   */\r\n  function getIndexInParent(element, parent) {\r\n    return [...parent.children].indexOf(element);\r\n  }\r\n\r\n  /**\r\n   * Функция сортировки массива по breakpoint и order\r\n   * по возрастанию для type = min\r\n   * по убыванию для type = max\r\n   *\r\n   * @param {dNode[]} items\r\n   */\r\n  function sortDNodes(items) {\r\n    const isMin = type === \"min\" ? 1 : 0;\r\n\r\n    return [...items].sort((a, b) => {\r\n      if (a.breakpoint === b.breakpoint) {\r\n        if (a.order === b.order) {\r\n          return 0;\r\n        }\r\n\r\n        if (a.order === \"first\" || b.order === \"last\") {\r\n          return -1 * isMin;\r\n        }\r\n\r\n        if (a.order === \"last\" || b.order === \"first\") {\r\n          return 1 * isMin;\r\n        }\r\n\r\n        return 0;\r\n      }\r\n\r\n      return (a.breakpoint - b.breakpoint) * isMin;\r\n    });\r\n  }\r\n\r\n  function isNumber(value) {\r\n    return !isNaN(value);\r\n  }\r\n}\r\n\r\n//import { useDynamicAdapt } from './src/dynamicAdapt.js'\r\n\r\nuseDynamicAdapt();\r\n//////////////////////////////////////////////////////////////////////\r\nif(document.querySelector('.slider-rooms ')){\r\n  const swiper = new Swiper(\".slider-rooms \", {\r\n    observer: true,\r\n    observeParents: true,\r\n    slidesPerView: 'auto',\r\n    spaceBetween: 24,\r\n    watchOverflow: true,\r\n    speed: 800,\r\n    loop: true,\r\n    loopAdditionalSlides: 5,\r\n    preloadImages: false,\r\n    \r\n    parallax: true,\r\n    //direction: \"horizontal\",\r\n    pagination: {\r\n      el: '.slider-rooms_docts',\r\n      clickable:true,\r\n    },\r\n    navigation: {\r\n      nextEl: \".slider-rooms .slider-arrow_next\",\r\n      prevEl: \".slider-rooms .slider-arrow_prev\",\r\n    },\r\n    \r\n  });\r\n  \r\n}\r\n\r\nif(document.querySelector('.slider-tips_body')){\r\n  const swiper = new Swiper(\".slider-tips_body\", {\r\n    observer: true,\r\n    observeParents: true,\r\n    slidesPerView: 3,\r\n    spaceBetween: 32,\r\n    speed: 800,\r\n    loop: true,\r\n    watchOverflow:true,\r\n    pagination: {\r\n      el: '.slider-tips_docts',\r\n      clickable:true,\r\n    },\r\n    navigation: {\r\n      nextEl: \".slider-rooms .slider-arrow_next\",\r\n      prevEl: \".slider-rooms .slider-arrow_prev\",\r\n    },\r\n    breakpoints:{\r\n      320:{\r\n        slidesPerView:1.1,\r\n        spaceBetween:15\r\n      },\r\n      768:{\r\n        slidesPerView:2,\r\n        spaceBetween:20\r\n      },\r\n      992:{\r\n        slidesPerView:3,\r\n        spaceBetween:32\r\n      }\r\n    }\r\n    \r\n  });\r\n  \r\n}\r\n\r\n\n\n//# sourceURL=webpack://new-project/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;